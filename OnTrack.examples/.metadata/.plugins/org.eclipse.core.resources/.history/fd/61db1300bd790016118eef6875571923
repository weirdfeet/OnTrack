MACHINE ReleaseTable


/* Date: Tue Sep 13 12:26:13 BST 2016
 * Notes: supporting platform:/resource/Trackplans/default.ontrack model
 * Automatically generated by OnTrack tool version 0.2
 * Authors of Tool: Hoang Nga Nguyen
 * Authors: Moller, Nguyen, Roggenbach, Schneider, Treharne
 * Corresponding Authors: Hoang Nga Nguyen
 *
 */

[%
var bMachine1 = BMachine!Machine.all().first();
%]

SEES Context, ControlTable

CONSTANTS
    releaseTable

PROPERTIES
    releaseTable :  UNIT <-> (ROUTE*POINT) &

    [%
    for (p in bMachine1.hasProperties)
    {
    	out.println( p.write() );
    }
    %]

     & ran(releaseTable) = lockTable
END

[%

operation BMachine!BSet write() : String {

	var toReturn = "    " + self.name + " = {";

	for (el in self.hasSetElements)
	{
		toReturn = toReturn + el.name;

		if (hasMore) {toReturn = toReturn + ", ";}
	}

	toReturn = toReturn + "};";
	return toReturn;
}

operation BMachine!BSet writeElements() : String {

	var toReturn = "{";

	for (el in self.hasSetElements) {

		toReturn = toReturn + el.name;

		if (hasMore) {toReturn = toReturn + ",";}
	}

	toReturn = toReturn + "}";
	return toReturn;

}

operation BMachine!Property write() : String {

	var toReturn = "    " + self.name + " = {";

	for (pe in self.hasPropElements) {

		// print domain elements
		for (de in pe.hasDomainElements) {

			// if more than one element enclose in brackets
			if ((loopCount = 1) and hasMore) {toReturn = toReturn + "(";}

			toReturn = toReturn + de.name;
			if (hasMore) {toReturn = toReturn + ", ";}

			// close brackets if appropriate
			if ((not hasMore) and (loopCount > 1)) {toReturn = toReturn + ")";}
		}

		// if range set is present
		if (pe.hasRangeSet.isDefined()) {

			// print |->
			toReturn = toReturn + " |-> ";

			// print set
			toReturn = toReturn + pe.hasRangeSet.writeElements();
		}

		// print range elements
		for (re in pe.hasRangeElements) {

			// print |->
			if (loopCount = 1) {toReturn = toReturn + " |-> ";}

			// if more than one element enclose in brackets
			if ((loopCount = 1) and hasMore) {toReturn = toReturn + "(";}

			toReturn = toReturn + re.name;
			if (hasMore) {toReturn = toReturn + ",";}

			// close brackets if appropriate
			if ((not hasMore) and (loopCount > 1)) {toReturn = toReturn + ")";}
		}

		if (hasMore) {toReturn = toReturn + ", ";}
	}

	toReturn = toReturn + "}";
	return toReturn;
}

%]
