:- dynamic parserVersionNum/1, parserVersionStr/1, parseResult/5.
:- dynamic module/4.
'parserVersionStr'('0.5.0.0').
'parseResult'('ok','',0,0,0).
module('src_span'(19,3,99,34,787,2763),['DataType'('src_span'(22,1,22,29,861,28),'UniqueIdent'('src_span'(22,10,22,15,870,5),'TRAIN') , ['Constructor'('src_span'(22,18,22,22,878,4),'UniqueIdent'('src_span'(22,18,22,22,878,4),'Hugo') , none),'Constructor'('src_span'(22,25,22,29,885,4),'UniqueIdent'('src_span'(22,25,22,29,885,4),'Erna') , none)]),'DataType'('src_span'(23,1,23,41,890,40),'UniqueIdent'('src_span'(23,10,23,16,899,6),'ASPECT') , ['Constructor'('src_span'(23,19,23,22,908,3),'UniqueIdent'('src_span'(23,19,23,22,908,3),'red') , none),'Constructor'('src_span'(23,25,23,30,914,5),'UniqueIdent'('src_span'(23,25,23,30,914,5),'green') , none),'Constructor'('src_span'(23,33,23,41,922,8),'UniqueIdent'('src_span'(23,33,23,41,922,8),'nosignal') , none)]),'DataType'('src_span'(24,1,24,27,931,26),'UniqueIdent'('src_span'(24,10,24,16,940,6),'ANSWER') , ['Constructor'('src_span'(24,19,24,22,949,3),'UniqueIdent'('src_span'(24,19,24,22,949,3),'yes') , none),'Constructor'('src_span'(24,25,24,27,955,2),'UniqueIdent'('src_span'(24,25,24,27,955,2),'no') , none)]),'DataType'('src_span'(27,1,27,59,1011,58),'UniqueIdent'('src_span'(27,10,27,13,1020,3),'POS') , ['Constructor'('src_span'(27,16,27,18,1026,2),'UniqueIdent'('src_span'(27,16,27,18,1026,2),'AE') , none),'Constructor'('src_span'(27,21,27,23,1031,2),'UniqueIdent'('src_span'(27,21,27,23,1031,2),'AD') , none),'Constructor'('src_span'(27,26,27,28,1036,2),'UniqueIdent'('src_span'(27,26,27,28,1036,2),'AC') , none),'Constructor'('src_span'(27,31,27,33,1041,2),'UniqueIdent'('src_span'(27,31,27,33,1041,2),'AB') , none),'Constructor'('src_span'(27,36,27,38,1046,2),'UniqueIdent'('src_span'(27,36,27,38,1046,2),'AA') , none),'Constructor'('src_span'(27,41,27,48,1051,7),'UniqueIdent'('src_span'(27,41,27,48,1051,7),'offUnit') , none),'Constructor'('src_span'(27,51,27,59,1061,8),'UniqueIdent'('src_span'(27,51,27,59,1061,8),'nullUnit') , none)]),'DataType'('src_span'(28,1,28,41,1070,40),'UniqueIdent'('src_span'(28,10,28,18,1079,8),'ALLROUTE') , ['Constructor'('src_span'(28,21,28,23,1090,2),'UniqueIdent'('src_span'(28,21,28,23,1090,2),'R1') , none),'Constructor'('src_span'(28,26,28,28,1095,2),'UniqueIdent'('src_span'(28,26,28,28,1095,2),'R2') , none),'Constructor'('src_span'(28,31,28,41,1100,10),'UniqueIdent'('src_span'(28,31,28,41,1100,10),'dummyRoute') , none)]),'PatBind'('src_span'(32,1,32,14,1198,13),'VarPat'('src_span'(32,1,32,7,1198,6),'UniqueIdent'('src_span'(32,1,32,7,1198,6),'BUFFER')) , 'SetExp'('src_span'(32,10,32,14,1207,4),'RangeEnum'('src_span'(32,13,32,11,1210,-2),[]) , none)),'PatBind'('src_span'(33,1,33,24,1212,23),'VarPat'('src_span'(33,1,33,11,1212,10),'UniqueIdent'('src_span'(33,1,33,11,1212,10),'SIGNALHOME')) , 'SetExp'('src_span'(33,14,33,24,1225,10),'RangeEnum'('src_span'(33,16,33,22,1227,6),['Var'('src_span'(33,16,33,18,1227,2),'UniqueIdent'('src_span'(33,16,33,18,1227,2),'AA')),'Var'('src_span'(33,20,33,22,1231,2),'UniqueIdent'('src_span'(33,20,33,22,1231,2),'AC'))]) , none)),'PatBind'('src_span'(34,1,34,19,1236,18),'VarPat'('src_span'(34,1,34,6,1236,5),'UniqueIdent'('src_span'(34,1,34,6,1236,5),'ROUTE')) , 'SetExp'('src_span'(34,9,34,19,1244,10),'RangeEnum'('src_span'(34,11,34,17,1246,6),['Var'('src_span'(34,11,34,13,1246,2),'UniqueIdent'('src_span'(34,11,34,13,1246,2),'R2')),'Var'('src_span'(34,15,34,17,1250,2),'UniqueIdent'('src_span'(34,15,34,17,1250,2),'R1'))]) , none)),'PatBind'('src_span'(35,1,35,19,1255,18),'VarPat'('src_span'(35,1,35,12,1255,11),'UniqueIdent'('src_span'(35,1,35,12,1255,11),'HIDDENROUTE')) , 'SetExp'('src_span'(35,15,35,19,1269,4),'RangeEnum'('src_span'(35,18,35,16,1272,-2),[]) , none)),'PatBind'('src_span'(38,1,38,15,1298,14),'VarPat'('src_span'(38,1,38,9,1298,8),'UniqueIdent'('src_span'(38,1,38,9,1298,8),'ALLTRACK')) , 'Var'('src_span'(38,12,38,15,1309,3),'UniqueIdent'('src_span'(38,12,38,15,1309,3),'POS'))),'PatBind'('src_span'(39,1,39,17,1313,16),'VarPat'('src_span'(39,1,39,6,1313,5),'UniqueIdent'('src_span'(39,1,39,6,1313,5),'TRACK')) , 'Var'('src_span'(39,9,39,17,1321,8),'UniqueIdent'('src_span'(39,9,39,17,1321,8),'ALLTRACK'))),'Channel'('src_span'(43,1,43,37,1478,36),['UniqueIdent'('src_span'(43,9,43,14,1486,5),'enter')] , 'TypeDot'('src_span'(43,16,43,37,1493,21),['Var'('src_span'(43,16,43,21,1493,5),'UniqueIdent'('src_span'(43,16,43,21,1493,5),'TRAIN')),'Var'('src_span'(43,22,43,30,1499,8),'UniqueIdent'('src_span'(43,22,43,30,1499,8),'ALLTRACK')),'Var'('src_span'(43,31,43,37,1508,6),'UniqueIdent'('src_span'(43,31,43,37,1508,6),'ANSWER'))])),'Channel'('src_span'(44,1,44,36,1515,35),['UniqueIdent'('src_span'(44,9,44,13,1523,4),'exit')] , 'TypeDot'('src_span'(44,15,44,36,1529,21),['Var'('src_span'(44,15,44,20,1529,5),'UniqueIdent'('src_span'(44,15,44,20,1529,5),'TRAIN')),'Var'('src_span'(44,21,44,29,1535,8),'UniqueIdent'('src_span'(44,21,44,29,1535,8),'ALLTRACK')),'Var'('src_span'(44,30,44,36,1544,6),'UniqueIdent'('src_span'(44,30,44,36,1544,6),'ANSWER'))])),'Channel'('src_span'(45,1,45,43,1551,42),['UniqueIdent'('src_span'(45,9,45,19,1559,10),'nextSignal')] , 'TypeDot'('src_span'(45,22,45,43,1572,21),['Var'('src_span'(45,22,45,27,1572,5),'UniqueIdent'('src_span'(45,22,45,27,1572,5),'TRAIN')),'Var'('src_span'(45,28,45,36,1578,8),'UniqueIdent'('src_span'(45,28,45,36,1578,8),'ALLTRACK')),'Var'('src_span'(45,37,45,43,1587,6),'UniqueIdent'('src_span'(45,37,45,43,1587,6),'ASPECT'))])),'Channel'('src_span'(46,1,46,39,1594,38),['UniqueIdent'('src_span'(46,9,46,13,1602,4),'move')] , 'TypeDot'('src_span'(46,16,46,39,1609,23),['Var'('src_span'(46,16,46,21,1609,5),'UniqueIdent'('src_span'(46,16,46,21,1609,5),'TRAIN')),'Var'('src_span'(46,22,46,30,1615,8),'UniqueIdent'('src_span'(46,22,46,30,1615,8),'ALLTRACK')),'Var'('src_span'(46,31,46,39,1624,8),'UniqueIdent'('src_span'(46,31,46,39,1624,8),'ALLTRACK'))])),'Channel'('src_span'(47,1,47,31,1633,30),['UniqueIdent'('src_span'(47,9,47,16,1641,7),'request')] , 'TypeDot'('src_span'(47,19,47,31,1651,12),['Var'('src_span'(47,19,47,24,1651,5),'UniqueIdent'('src_span'(47,19,47,24,1651,5),'ROUTE')),'Var'('src_span'(47,25,47,31,1657,6),'UniqueIdent'('src_span'(47,25,47,31,1657,6),'ANSWER'))])),'Channel'('src_span'(48,1,48,31,1664,30),['UniqueIdent'('src_span'(48,9,48,16,1672,7),'release')] , 'TypeDot'('src_span'(48,19,48,31,1682,12),['Var'('src_span'(48,19,48,24,1682,5),'UniqueIdent'('src_span'(48,19,48,24,1682,5),'ROUTE')),'Var'('src_span'(48,25,48,31,1688,6),'UniqueIdent'('src_span'(48,25,48,31,1688,6),'ANSWER'))])),'Channel'('src_span'(49,1,49,43,1695,42),['UniqueIdent'('src_span'(49,9,49,22,1703,13),'hiddenRequest')] , 'TypeDot'('src_span'(49,25,49,43,1719,18),['Var'('src_span'(49,25,49,36,1719,11),'UniqueIdent'('src_span'(49,25,49,36,1719,11),'HIDDENROUTE')),'Var'('src_span'(49,37,49,43,1731,6),'UniqueIdent'('src_span'(49,37,49,43,1731,6),'ANSWER'))])),'Channel'('src_span'(50,1,50,40,1738,39),['UniqueIdent'('src_span'(50,9,50,24,1746,15),'changeDirection')] , 'TypeDot'('src_span'(50,26,50,40,1763,14),['Var'('src_span'(50,26,50,31,1763,5),'UniqueIdent'('src_span'(50,26,50,31,1763,5),'TRAIN')),'Var'('src_span'(50,32,50,40,1769,8),'UniqueIdent'('src_span'(50,32,50,40,1769,8),'ALLTRACK'))])),'Channel'('src_span'(52,1,52,34,1809,33),['UniqueIdent'('src_span'(52,9,52,16,1817,7),'collide'),'UniqueIdent'('src_span'(52,17,52,23,1825,6),'derail'),'UniqueIdent'('src_span'(52,24,52,34,1832,10),'runThrough')] , none),'PatBind'('src_span'(56,1,61,56,1918,163),'VarPat'('src_span'(56,1,56,8,1918,7),'UniqueIdent'('src_span'(56,1,56,8,1918,7),'RW_CTRL')) , 'Fun2'('no_loc_info_available','BuiltIn'('src_span'(60,3,60,5,2023,2),'F_ExtChoice'(U1)) , 'Fun2'('no_loc_info_available','BuiltIn'('src_span'(58,3,58,5,1974,2),'F_ExtChoice'(U1)) , 'Parens'('src_span'(57,3,57,44,1930,41),'ProcRepExternalChoice'('src_span'(57,4,57,43,1931,39),['Generator'('src_span'(57,7,57,16,1934,9),'VarPat'('src_span'(57,7,57,8,1934,1),'UniqueIdent'('src_span'(57,7,57,8,1934,1),'r')) , 'Var'('src_span'(57,11,57,16,1938,5),'UniqueIdent'('src_span'(57,11,57,16,1938,5),'ROUTE')))] , 'PrefixExp'('src_span'(57,19,57,43,1946,24),'Var'('src_span'(57,19,57,26,1946,7),'UniqueIdent'('src_span'(57,19,57,26,1946,7),'request')) , ['OutComm'('src_span'(57,26,57,28,1953,2),'Var'('src_span'(57,27,57,28,1954,1),'UniqueIdent'('src_span'(57,27,57,28,1954,1),'r'))),'InComm'('src_span'(57,28,57,32,1955,4),'VarPat'('src_span'(57,29,57,32,1956,3),'UniqueIdent'('src_span'(57,29,57,32,1956,3),'ans')))] , 'Var'('src_span'(57,36,57,43,1963,7),'UniqueIdent'('src_span'(57,36,57,43,1963,7),'RW_CTRL'))))) , 'Parens'('src_span'(59,3,59,44,1979,41),'ProcRepExternalChoice'('src_span'(59,4,59,43,1980,39),['Generator'('src_span'(59,7,59,16,1983,9),'VarPat'('src_span'(59,7,59,8,1983,1),'UniqueIdent'('src_span'(59,7,59,8,1983,1),'r2')) , 'Var'('src_span'(59,11,59,16,1987,5),'UniqueIdent'('src_span'(59,11,59,16,1987,5),'ROUTE')))] , 'PrefixExp'('src_span'(59,19,59,43,1995,24),'Var'('src_span'(59,19,59,26,1995,7),'UniqueIdent'('src_span'(59,19,59,26,1995,7),'release')) , ['OutComm'('src_span'(59,26,59,28,2002,2),'Var'('src_span'(59,27,59,28,2003,1),'UniqueIdent'('src_span'(59,27,59,28,2003,1),'r2'))),'InComm'('src_span'(59,28,59,32,2004,4),'VarPat'('src_span'(59,29,59,32,2005,3),'UniqueIdent'('src_span'(59,29,59,32,2005,3),'ans2')))] , 'Var'('src_span'(59,36,59,43,2012,7),'UniqueIdent'('src_span'(59,36,59,43,2012,7),'RW_CTRL')))))) , 'Parens'('src_span'(61,3,61,56,2028,53),'ProcRepExternalChoice'('src_span'(61,4,61,55,2029,51),['Generator'('src_span'(61,7,61,22,2032,15),'VarPat'('src_span'(61,7,61,8,2032,1),'UniqueIdent'('src_span'(61,7,61,8,2032,1),'r3')) , 'Var'('src_span'(61,11,61,22,2036,11),'UniqueIdent'('src_span'(61,11,61,22,2036,11),'HIDDENROUTE')))] , 'PrefixExp'('src_span'(61,25,61,55,2050,30),'Var'('src_span'(61,25,61,38,2050,13),'UniqueIdent'('src_span'(61,25,61,38,2050,13),'hiddenRequest')) , ['OutComm'('src_span'(61,38,61,40,2063,2),'Var'('src_span'(61,39,61,40,2064,1),'UniqueIdent'('src_span'(61,39,61,40,2064,1),'r3'))),'InComm'('src_span'(61,40,61,44,2065,4),'VarPat'('src_span'(61,41,61,44,2066,3),'UniqueIdent'('src_span'(61,41,61,44,2066,3),'ans3')))] , 'Var'('src_span'(61,48,61,55,2073,7),'UniqueIdent'('src_span'(61,48,61,55,2073,7),'RW_CTRL'))))))),'FunBind'('src_span'(64,1,64,10,2132,9),'UniqueIdent'('src_span'(64,1,64,10,2132,9),'TRAIN_OFF') , ['FunCase'([['VarPat'('src_span'(64,11,64,12,2142,1),'UniqueIdent'('src_span'(64,11,64,12,2142,1),'t'))]] , 'PrefixExp'('src_span'(64,16,64,59,2147,43),'Var'('src_span'(64,16,64,20,2147,4),'UniqueIdent'('src_span'(64,16,64,20,2147,4),'move')) , ['OutComm'('src_span'(64,20,64,22,2151,2),'Var'('src_span'(64,21,64,22,2152,1),'UniqueIdent'('src_span'(64,21,64,22,2152,1),'t'))),'OutComm'('src_span'(64,22,64,30,2153,8),'Var'('src_span'(64,23,64,30,2154,7),'UniqueIdent'('src_span'(64,23,64,30,2154,7),'offUnit'))),'InComm'('src_span'(64,30,64,33,2161,3),'VarPat'('src_span'(64,31,64,33,2162,2),'UniqueIdent'('src_span'(64,31,64,33,2162,2),'np')))] , 'CallFunction'('src_span'(64,37,64,59,2168,22),'Var'('src_span'(64,37,64,47,2168,10),'UniqueIdent'('src_span'(64,37,64,47,2168,10),'TRAIN_CTRL')) , [['Var'('src_span'(64,48,64,49,2179,1),'UniqueIdent'('src_span'(64,48,64,49,2179,1),'t')),'Var'('src_span'(64,50,64,52,2181,2),'UniqueIdent'('src_span'(64,50,64,52,2181,2),'np')),'CFalse'('src_span'(64,53,64,58,2184,5),U1)]])))]),'FunBind'('src_span'(67,1,67,11,2273,10),'UniqueIdent'('src_span'(67,1,67,11,2273,10),'TRAIN_CTRL') , ['FunCase'([['VarPat'('src_span'(67,12,67,13,2284,1),'UniqueIdent'('src_span'(67,12,67,13,2284,1),'t2')),'VarPat'('src_span'(67,14,67,17,2286,3),'UniqueIdent'('src_span'(67,14,67,17,2286,3),'pos')),'VarPat'('src_span'(67,18,67,26,2290,8),'UniqueIdent'('src_span'(67,18,67,26,2290,8),'u_turned'))]] , 'Ifte'('src_span'(68,1,82,2,2302,468),'Fun2'('no_loc_info_available','BuiltIn'('src_span'(68,7,68,9,2308,2),'F_Eq'(U1)) , 'Var'('src_span'(68,4,68,7,2305,3),'UniqueIdent'('src_span'(68,4,68,7,2305,3),'pos')) , 'Var'('src_span'(68,9,68,16,2310,7),'UniqueIdent'('src_span'(68,9,68,16,2310,7),'offUnit'))) , 'CallFunction'('src_span'(68,22,68,34,2323,12),'Var'('src_span'(68,22,68,31,2323,9),'UniqueIdent'('src_span'(68,22,68,31,2323,9),'TRAIN_OFF')) , [['Var'('src_span'(68,32,68,33,2333,1),'UniqueIdent'('src_span'(68,32,68,33,2333,1),'t2'))]]) , 'Ifte'('src_span'(69,1,82,2,2341,429),'Fun2'('no_loc_info_available','BuiltIn'('src_span'(69,7,69,9,2347,2),'F_Eq'(U1)) , 'Var'('src_span'(69,4,69,7,2344,3),'UniqueIdent'('src_span'(69,4,69,7,2344,3),'pos')) , 'Var'('src_span'(69,9,69,17,2349,8),'UniqueIdent'('src_span'(69,9,69,17,2349,8),'nullUnit'))) , 'Stop'('src_span'(69,23,69,27,2363,4),U1) , 'Parens'('src_span'(70,1,82,2,2373,397),'Ifte'('src_span'(71,3,81,50,2377,391),'AndExp'('src_span'(71,6,71,32,2380,26),'CallBuiltIn'('src_span'(71,6,71,24,2380,18),'BuiltIn'('src_span'(71,6,71,12,2380,6),'F_member'(U1)) , [['Var'('src_span'(71,13,71,16,2387,3),'UniqueIdent'('src_span'(71,13,71,16,2387,3),'pos')),'Var'('src_span'(71,17,71,23,2391,6),'UniqueIdent'('src_span'(71,17,71,23,2391,6),'BUFFER'))]]) , 'NotExp'('src_position'(71,29,2403,3),'Parens'('src_span'(71,32,71,42,2406,10),'Var'('src_span'(71,33,71,41,2407,8),'UniqueIdent'('src_span'(71,33,71,41,2407,8),'u_turned'))))) , 'PrefixExp'('src_span'(72,5,72,52,2427,47),'DotTuple'('src_span'(72,5,72,26,2427,21),['Var'('src_span'(72,5,72,20,2427,15),'UniqueIdent'('src_span'(72,5,72,20,2427,15),'changeDirection')),'Var'('src_span'(72,21,72,22,2443,1),'UniqueIdent'('src_span'(72,21,72,22,2443,1),'t2')),'Var'('src_span'(72,23,72,26,2445,3),'UniqueIdent'('src_span'(72,23,72,26,2445,3),'pos'))]) , [] , 'CallFunction'('src_span'(72,30,72,52,2452,22),'Var'('src_span'(72,30,72,40,2452,10),'UniqueIdent'('src_span'(72,30,72,40,2452,10),'TRAIN_CTRL')) , [['Var'('src_span'(72,41,72,42,2463,1),'UniqueIdent'('src_span'(72,41,72,42,2463,1),'t2')),'Var'('src_span'(72,43,72,46,2465,3),'UniqueIdent'('src_span'(72,43,72,46,2465,3),'pos')),'CTrue'('src_span'(72,47,72,51,2469,4),U1)]])) , 'Ifte'('src_span'(74,3,81,50,2485,283),'CallBuiltIn'('src_span'(74,6,74,28,2488,22),'BuiltIn'('src_span'(74,6,74,12,2488,6),'F_member'(U1)) , [['Var'('src_span'(74,13,74,16,2495,3),'UniqueIdent'('src_span'(74,13,74,16,2495,3),'pos')),'Var'('src_span'(74,17,74,27,2499,10),'UniqueIdent'('src_span'(74,17,74,27,2499,10),'SIGNALHOME'))]]) , 'PrefixExp'('src_span'(75,5,79,37,2520,191),'Var'('src_span'(75,5,75,15,2520,10),'UniqueIdent'('src_span'(75,5,75,15,2520,10),'nextSignal')) , ['OutComm'('src_span'(75,15,75,17,2530,2),'Var'('src_span'(75,16,75,17,2531,1),'UniqueIdent'('src_span'(75,16,75,17,2531,1),'t2'))),'OutComm'('src_span'(75,17,75,21,2532,4),'Var'('src_span'(75,18,75,21,2533,3),'UniqueIdent'('src_span'(75,18,75,21,2533,3),'pos'))),'InComm'('src_span'(75,21,75,28,2536,7),'VarPat'('src_span'(75,22,75,28,2537,6),'UniqueIdent'('src_span'(75,22,75,28,2537,6),'aspect')))] , 'Ifte'('src_span'(76,7,79,37,2553,158),'OrExp'('no_loc_info_available','Fun2'('no_loc_info_available','BuiltIn'('src_span'(76,16,76,18,2562,2),'F_Eq'(U1)) , 'Var'('src_span'(76,10,76,16,2556,6),'UniqueIdent'('src_span'(76,10,76,16,2556,6),'aspect')) , 'Var'('src_span'(76,18,76,23,2564,5),'UniqueIdent'('src_span'(76,18,76,23,2564,5),'green'))) , 'Fun2'('no_loc_info_available','BuiltIn'('src_span'(76,33,76,35,2579,2),'F_Eq'(U1)) , 'Var'('src_span'(76,27,76,33,2573,6),'UniqueIdent'('src_span'(76,27,76,33,2573,6),'aspect')) , 'Var'('src_span'(76,35,76,43,2581,8),'UniqueIdent'('src_span'(76,35,76,43,2581,8),'nosignal')))) , 'Parens'('src_span'(77,9,77,54,2603,45),'PrefixExp'('src_span'(77,10,77,53,2604,43),'DotTuple'('src_span'(77,10,77,20,2604,10),['Var'('src_span'(77,10,77,14,2604,4),'UniqueIdent'('src_span'(77,10,77,14,2604,4),'move')),'Var'('src_span'(77,15,77,16,2609,1),'UniqueIdent'('src_span'(77,15,77,16,2609,1),'t2')),'Var'('src_span'(77,17,77,20,2611,3),'UniqueIdent'('src_span'(77,17,77,20,2611,3),'pos'))]) , ['InComm'('src_span'(77,20,77,25,2614,5),'VarPat'('src_span'(77,21,77,25,2615,4),'UniqueIdent'('src_span'(77,21,77,25,2615,4),'newp')))] , 'CallFunction'('src_span'(77,29,77,53,2623,24),'Var'('src_span'(77,29,77,39,2623,10),'UniqueIdent'('src_span'(77,29,77,39,2623,10),'TRAIN_CTRL')) , [['Var'('src_span'(77,40,77,41,2634,1),'UniqueIdent'('src_span'(77,40,77,41,2634,1),'t2')),'Var'('src_span'(77,42,77,46,2636,4),'UniqueIdent'('src_span'(77,42,77,46,2636,4),'newp')),'CFalse'('src_span'(77,47,77,52,2641,5),U1)]]))) , 'Parens'('src_span'(79,9,79,37,2683,28),'CallFunction'('src_span'(79,10,79,36,2684,26),'Var'('src_span'(79,10,79,20,2684,10),'UniqueIdent'('src_span'(79,10,79,20,2684,10),'TRAIN_CTRL')) , [['Var'('src_span'(79,21,79,22,2695,1),'UniqueIdent'('src_span'(79,21,79,22,2695,1),'t2')),'Var'('src_span'(79,23,79,26,2697,3),'UniqueIdent'('src_span'(79,23,79,26,2697,3),'pos')),'Var'('src_span'(79,27,79,35,2701,8),'UniqueIdent'('src_span'(79,27,79,35,2701,8),'u_turned'))]])))) , 'Parens'('src_span'(81,5,81,50,2723,45),'PrefixExp'('src_span'(81,6,81,49,2724,43),'DotTuple'('src_span'(81,6,81,16,2724,10),['Var'('src_span'(81,6,81,10,2724,4),'UniqueIdent'('src_span'(81,6,81,10,2724,4),'move')),'Var'('src_span'(81,11,81,12,2729,1),'UniqueIdent'('src_span'(81,11,81,12,2729,1),'t2')),'Var'('src_span'(81,13,81,16,2731,3),'UniqueIdent'('src_span'(81,13,81,16,2731,3),'pos'))]) , ['InComm'('src_span'(81,16,81,21,2734,5),'VarPat'('src_span'(81,17,81,21,2735,4),'UniqueIdent'('src_span'(81,17,81,21,2735,4),'newp2')))] , 'CallFunction'('src_span'(81,25,81,49,2743,24),'Var'('src_span'(81,25,81,35,2743,10),'UniqueIdent'('src_span'(81,25,81,35,2743,10),'TRAIN_CTRL')) , [['Var'('src_span'(81,36,81,37,2754,1),'UniqueIdent'('src_span'(81,36,81,37,2754,1),'t2')),'Var'('src_span'(81,38,81,42,2756,4),'UniqueIdent'('src_span'(81,38,81,42,2756,4),'newp2')),'CFalse'('src_span'(81,43,81,48,2761,5),U1)]])))))))))]),'PatBind'('src_span'(85,1,85,42,2846,41),'VarPat'('src_span'(85,1,85,11,2846,10),'UniqueIdent'('src_span'(85,1,85,11,2846,10),'ALL_TRAINS')) , 'ProcRepInterleave'('src_span'(85,14,85,42,2859,28),['Generator'('src_span'(85,18,85,27,2863,9),'VarPat'('src_span'(85,18,85,19,2863,1),'UniqueIdent'('src_span'(85,18,85,19,2863,1),'t3')) , 'Var'('src_span'(85,22,85,27,2867,5),'UniqueIdent'('src_span'(85,22,85,27,2867,5),'TRAIN')))] , 'CallFunction'('src_span'(85,30,85,42,2875,12),'Var'('src_span'(85,30,85,39,2875,9),'UniqueIdent'('src_span'(85,30,85,39,2875,9),'TRAIN_OFF')) , [['Var'('src_span'(85,40,85,41,2885,1),'UniqueIdent'('src_span'(85,40,85,41,2885,1),'t3'))]]))),'PatBind'('src_span'(90,1,90,41,3117,40),'VarPat'('src_span'(90,1,90,11,3117,10),'UniqueIdent'('src_span'(90,1,90,11,3117,10),'ErrorEvent')) , 'SetExp'('src_span'(90,14,90,41,3130,27),'RangeEnum'('src_span'(90,15,90,40,3131,25),['Var'('src_span'(90,15,90,22,3131,7),'UniqueIdent'('src_span'(90,15,90,22,3131,7),'collide')),'Var'('src_span'(90,23,90,29,3139,6),'UniqueIdent'('src_span'(90,23,90,29,3139,6),'derail')),'Var'('src_span'(90,30,90,40,3146,10),'UniqueIdent'('src_span'(90,30,90,40,3146,10),'runThrough'))]) , none)),'PatBind'('src_span'(91,1,91,47,3158,46),'VarPat'('src_span'(91,1,91,6,3158,5),'UniqueIdent'('src_span'(91,1,91,6,3158,5),'ERROR')) , 'ProcRepExternalChoice'('src_span'(91,9,91,47,3166,38),['Generator'('src_span'(91,12,91,30,3169,18),'VarPat'('src_span'(91,12,91,17,3169,5),'UniqueIdent'('src_span'(91,12,91,17,3169,5),'error')) , 'Var'('src_span'(91,20,91,30,3177,10),'UniqueIdent'('src_span'(91,20,91,30,3177,10),'ErrorEvent')))] , 'PrefixExp'('src_span'(91,33,91,47,3190,14),'Var'('src_span'(91,33,91,38,3190,5),'UniqueIdent'('src_span'(91,33,91,38,3190,5),'error')) , [] , 'Var'('src_span'(91,42,91,47,3199,5),'UniqueIdent'('src_span'(91,42,91,47,3199,5),'ERROR'))))),'PatBind'('src_span'(95,1,95,42,3364,41),'VarPat'('src_span'(95,1,95,17,3364,16),'UniqueIdent'('src_span'(95,1,95,17,3364,16),'CTRL_WITH_TRAINS')) , 'Fun2'('no_loc_info_available','BuiltIn'('src_span'(95,28,95,31,3391,3),'F_Interleave'(U1)) , 'Var'('src_span'(95,20,95,27,3383,7),'UniqueIdent'('src_span'(95,20,95,27,3383,7),'RW_CTRL')) , 'Var'('src_span'(95,32,95,42,3395,10),'UniqueIdent'('src_span'(95,32,95,42,3395,10),'ALL_TRAINS')))),'PatBind'('src_span'(99,1,99,34,3517,33),'VarPat'('src_span'(99,1,99,5,3517,4),'UniqueIdent'('src_span'(99,1,99,5,3517,4),'MAIN')) , 'Fun2'('no_loc_info_available','BuiltIn'('src_span'(99,25,99,28,3541,3),'F_Interleave'(U1)) , 'Var'('src_span'(99,8,99,24,3524,16),'UniqueIdent'('src_span'(99,8,99,24,3524,16),'CTRL_WITH_TRAINS')) , 'Var'('src_span'(99,29,99,34,3545,5),'UniqueIdent'('src_span'(99,29,99,34,3545,5),'ERROR'))))],[('BlockComment'('{-\xa\ Date: Fri Sep 09 09:55:18 BST 2016\xa\ Notes:  CSP Controller for platform:/resource/Trackplans/default.ontrack model with 2 trains\xa\ \xa\ Generated by: Automatically produced by Version 0.2 of OnTrack tool\xa\ Authors of Tool: Hoang Nga Nguyen, Philip James\xa\ Authors of Model: Moller, Nguyen, Roggenbach, Schneider, Treharne\xa\ Corresponding Authors: Hoang Nga Nguyen, Philip James\xa\ \xa\ Description: \xa\ A CSP process to guide the Interlocking.mch\xa\\xa\ First open the Interlocking.mch file as usual in ProB\xa\ Then select the menu item\xa\        Menu -> File -> Open Special -> Use CSP File to Guide B\xa\ You have to be in normal mode to see this menu item (not in beginner mode)\xa\\xa\ Comments: This model describes the train behaviour of an open system with trains exiting and remaining on the exit track. \xa\-}'),'src_position'(1,1,0,787)),('LineComment'('-- datatype definitions corresponding to those given in the Context.mch'),'src_position'(21,1,789,71)),('LineComment'('-- following datatypes are generated: POS, ALLROUTE'),'src_position'(26,1,959,51)),('LineComment'('-- end generating datatypes'),'src_position'(29,1,1111,27)),('LineComment'('--following sets are generated: BUFFER, ROUTE, SIGNALHOME'),'src_position'(31,1,1140,57)),('LineComment'('-- end generating sets'),'src_position'(36,1,1274,22)),('LineComment'('-- the rest of this file is the same for all track plans'),'src_position'(41,1,1331,56)),('LineComment'('-- define channels with names that correspond to the B operations in the Interlocking.mch'),'src_position'(42,1,1388,89)),('LineComment'('--definition of error channels'),'src_position'(51,1,1778,30)),('LineComment'('--controller process to deal with route requests and releasing of routes'),'src_position'(55,1,1845,72)),('LineComment'('--definition of individual train control process'),'src_position'(63,1,2083,48)),('LineComment'('--process to determine movement of train, trains do not move through red signals'),'src_position'(66,1,2192,80)),('LineComment'('-- aspect==red'),'src_position'(78,12,2660,14)),('LineComment'('--definition of all train processes which are not initially on the tracks'),'src_position'(84,1,2772,73)),('LineComment'('--definitons to model collision and derailment and runthrough'),'src_position'(87,1,2889,61)),('LineComment'('--these processes serve no purpose in the CSP but are included so that the alphabets of the CSP and B match'),'src_position'(88,1,2951,107)),('LineComment'('--they are events that are used in the CTL model checking'),'src_position'(89,1,3059,57)),('LineComment'('--define the composition of the route controller, all trains and the error events'),'src_position'(93,1,3206,81)),('LineComment'('--control the entry of the two trains in the model to limit the state space'),'src_position'(94,1,3288,75)),('LineComment'('-- Main process which enables the B and CSP to be analysed together'),'src_position'(97,1,3407,67)),('LineComment'('-- is needed in order to run through ProB'),'src_position'(98,1,3475,41))],[])
:- dynamic channel/2, bindval/3, agent/3.
:- dynamic agent_curry/3, symbol/4.
:- dynamic dataTypeDef/2, subTypeDef/2, nameType/2.
:- dynamic cspTransparent/1.
:- dynamic cspPrint/1.
:- dynamic pragma/1.
:- dynamic comment/2.
:- dynamic assertBool/1, assertRef/5, assertTauPrio/6.
:- dynamic assertModelCheckExt/4, assertModelCheck/3.
'parserVersionNum'([0,9,1,1]).
'parserVersionStr'('CSPM-Frontent-0.9.1.1').
'dataTypeDef'('TRAIN',['constructor'('Hugo'),'constructor'('Erna')]).
'dataTypeDef'('ASPECT',['constructor'('red'),'constructor'('green'),'constructor'('nosignal')]).
'dataTypeDef'('ANSWER',['constructor'('yes'),'constructor'('no')]).
'dataTypeDef'('POS',['constructor'('AE'),'constructor'('AD'),'constructor'('AC'),'constructor'('AB'),'constructor'('AA'),'constructor'('offUnit'),'constructor'('nullUnit')]).
'dataTypeDef'('ALLROUTE',['constructor'('R1'),'constructor'('R2'),'constructor'('dummyRoute')]).
'bindval'('BUFFER','setExp'('rangeEnum'([])),'src_span'(32,1,32,14,1198,13)).
'bindval'('SIGNALHOME','setExp'('rangeEnum'(['AA','AC'])),'src_span'(33,1,33,24,1212,23)).
'bindval'('ROUTE','setExp'('rangeEnum'(['R2','R1'])),'src_span'(34,1,34,19,1236,18)).
'bindval'('HIDDENROUTE','setExp'('rangeEnum'([])),'src_span'(35,1,35,19,1255,18)).
'bindval'('ALLTRACK','POS','src_span'(38,1,38,15,1298,14)).
'bindval'('TRACK','val_of'('ALLTRACK','src_span'(39,9,39,17,1321,8)),'src_span'(39,1,39,17,1313,16)).
'channel'('enter','type'('dotTupleType'(['TRAIN','val_of'('ALLTRACK','src_span'(43,22,43,30,1499,8)),'ANSWER']))).
'channel'('exit','type'('dotTupleType'(['TRAIN','val_of'('ALLTRACK','src_span'(44,21,44,29,1535,8)),'ANSWER']))).
'channel'('nextSignal','type'('dotTupleType'(['TRAIN','val_of'('ALLTRACK','src_span'(45,28,45,36,1578,8)),'ASPECT']))).
'channel'('move','type'('dotTupleType'(['TRAIN','val_of'('ALLTRACK','src_span'(46,22,46,30,1615,8)),'val_of'('ALLTRACK','src_span'(46,31,46,39,1624,8))]))).
'channel'('request','type'('dotTupleType'(['val_of'('ROUTE','src_span'(47,19,47,24,1651,5)),'ANSWER']))).
'channel'('release','type'('dotTupleType'(['val_of'('ROUTE','src_span'(48,19,48,24,1682,5)),'ANSWER']))).
'channel'('hiddenRequest','type'('dotTupleType'(['val_of'('HIDDENROUTE','src_span'(49,25,49,36,1719,11)),'ANSWER']))).
'channel'('changeDirection','type'('dotTupleType'(['TRAIN','val_of'('ALLTRACK','src_span'(50,32,50,40,1769,8))]))).
'channel'('collide','type'('dotUnitType')).
'channel'('derail','type'('dotUnitType')).
'channel'('runThrough','type'('dotUnitType')).
'bindval'('RW_CTRL','[]'('[]'('repChoice'(['comprehensionGenerator'(_r,'val_of'('ROUTE','src_span'(57,11,57,16,1938,5)))],'prefix'('src_span'(57,19,57,26,1946,7),['out'(_r),'in'(_ans)],'request','val_of'('RW_CTRL','src_span'(57,36,57,43,1963,7)),'src_span'(57,33,57,35,1959,15)),'src_span'(57,7,57,18,1934,11)),'repChoice'(['comprehensionGenerator'(_r2,'val_of'('ROUTE','src_span'(59,11,59,16,1987,5)))],'prefix'('src_span'(59,19,59,26,1995,7),['out'(_r2),'in'(_ans2)],'release','val_of'('RW_CTRL','src_span'(59,36,59,43,2012,7)),'src_span'(59,33,59,35,2008,15)),'src_span'(59,7,59,18,1983,11)),'src_span_operator'('no_loc_info_available','src_span'(58,3,58,5,1974,2))),'repChoice'(['comprehensionGenerator'(_r3,'val_of'('HIDDENROUTE','src_span'(61,11,61,22,2036,11)))],'prefix'('src_span'(61,25,61,38,2050,13),['out'(_r3),'in'(_ans3)],'hiddenRequest','val_of'('RW_CTRL','src_span'(61,48,61,55,2073,7)),'src_span'(61,45,61,47,2069,15)),'src_span'(61,7,61,24,2032,17)),'src_span_operator'('no_loc_info_available','src_span'(60,3,60,5,2023,2))),'src_span'(56,1,61,56,1918,163)).
'agent'('TRAIN_OFF'(_t),'prefix'('src_span'(64,16,64,20,2147,4),['out'(_t),'out'('offUnit'),'in'(_np)],'move','agent_call'('src_span'(64,37,64,47,2168,10),'TRAIN_CTRL',[_t,_np,'false']),'src_span'(64,34,64,36,2164,29)),'src_span'(64,16,64,59,2147,43)).
'agent'('TRAIN_CTRL'(_t2,_pos,_u_turned),'ifte'('=='(_pos,'offUnit'),'agent_call'('src_span'(68,22,68,31,2323,9),'TRAIN_OFF',[_t2]),'ifte'('=='(_pos,'nullUnit'),'stop'('src_span'(69,23,69,27,2363,4)),'ifte'('bool_and'('builtin_call'('member'(_pos,'val_of'('BUFFER','src_span'(71,17,71,23,2391,6)))),'bool_not'(_u_turned)),'prefix'('src_span'(72,5,72,26,2427,21),[],'dotTuple'(['changeDirection',_t2,_pos]),'agent_call'('src_span'(72,30,72,40,2452,10),'TRAIN_CTRL',[_t2,_pos,'true']),'src_span'(72,27,72,29,2448,47)),'ifte'('builtin_call'('member'(_pos,'val_of'('SIGNALHOME','src_span'(74,17,74,27,2499,10)))),'prefix'('src_span'(75,5,75,15,2520,10),['out'(_t2),'out'(_pos),'in'(_aspect)],'nextSignal','ifte'('bool_or'('=='(_aspect,'green'),'=='(_aspect,'nosignal')),'prefix'('src_span'(77,10,77,20,2604,10),['in'(_newp)],'dotTuple'(['move',_t2,_pos]),'agent_call'('src_span'(77,29,77,39,2623,10),'TRAIN_CTRL',[_t2,_newp,'false']),'src_span'(77,26,77,28,2619,33)),'agent_call'('src_span'(79,10,79,20,2684,10),'TRAIN_CTRL',[_t2,_pos,_u_turned]),'no_loc_info_available','no_loc_info_available','src_span'(77,55,79,8,2648,108)),'src_span'(75,29,76,6,2543,175)),'prefix'('src_span'(81,6,81,16,2724,10),['in'(_newp2)],'dotTuple'(['move',_t2,_pos]),'agent_call'('src_span'(81,25,81,35,2743,10),'TRAIN_CTRL',[_t2,_newp2,'false']),'src_span'(81,22,81,24,2739,33)),'src_span'(74,3,74,28,2485,25),'src_span'(74,29,75,4,2510,223),'src_span'(79,38,81,4,2711,248)),'src_span'(71,3,71,32,2377,29),'src_span'(71,33,72,4,2406,94),'src_span'(72,53,74,2,2474,341)),'no_loc_info_available','no_loc_info_available','src_span'(69,28,70,0,2367,407)),'no_loc_info_available','no_loc_info_available','src_span'(68,35,69,0,2335,447)),'src_span'(68,1,82,2,2302,468)).
'bindval'('ALL_TRAINS','repInterleave'(['comprehensionGenerator'(_t3,'TRAIN')],'agent_call'('src_span'(85,30,85,39,2875,9),'TRAIN_OFF',[_t3]),'src_span'(85,18,85,29,2863,11)),'src_span'(85,1,85,42,2846,41)).
'bindval'('ErrorEvent','setExp'('rangeEnum'(['collide','derail','runThrough'])),'src_span'(90,1,90,41,3117,40)).
'bindval'('ERROR','repChoice'(['comprehensionGenerator'(_error,'val_of'('ErrorEvent','src_span'(91,20,91,30,3177,10)))],'prefix'('src_span'(91,33,91,38,3190,5),[],_error,'val_of'('ERROR','src_span'(91,42,91,47,3199,5)),'src_span'(91,39,91,41,3195,14)),'src_span'(91,12,91,32,3169,20)),'src_span'(91,1,91,47,3158,46)).
'bindval'('CTRL_WITH_TRAINS','|||'('val_of'('RW_CTRL','src_span'(95,20,95,27,3383,7)),'val_of'('ALL_TRAINS','src_span'(95,32,95,42,3395,10)),'src_span_operator'('no_loc_info_available','src_span'(95,28,95,31,3391,3))),'src_span'(95,1,95,42,3364,41)).
'bindval'('MAIN','|||'('val_of'('CTRL_WITH_TRAINS','src_span'(99,8,99,24,3524,16)),'val_of'('ERROR','src_span'(99,29,99,34,3545,5)),'src_span_operator'('no_loc_info_available','src_span'(99,25,99,28,3541,3))),'src_span'(99,1,99,34,3517,33)).
'comment'('blockComment'('{-\xa\ Date: Fri Sep 09 09:55:18 BST 2016\xa\ Notes:  CSP Controller for platform:/resource/Trackplans/default.ontrack model with 2 trains\xa\ \xa\ Generated by: Automatically produced by Version 0.2 of OnTrack tool\xa\ Authors of Tool: Hoang Nga Nguyen, Philip James\xa\ Authors of Model: Moller, Nguyen, Roggenbach, Schneider, Treharne\xa\ Corresponding Authors: Hoang Nga Nguyen, Philip James\xa\ \xa\ Description: \xa\ A CSP process to guide the Interlocking.mch\xa\\xa\ First open the Interlocking.mch file as usual in ProB\xa\ Then select the menu item\xa\        Menu -> File -> Open Special -> Use CSP File to Guide B\xa\ You have to be in normal mode to see this menu item (not in beginner mode)\xa\\xa\ Comments: This model describes the train behaviour of an open system with trains exiting and remaining on the exit track. \xa\-}'),'src_position'(1,1,0,787)).
'comment'('lineComment'('-- datatype definitions corresponding to those given in the Context.mch'),'src_position'(21,1,789,71)).
'comment'('lineComment'('-- following datatypes are generated: POS, ALLROUTE'),'src_position'(26,1,959,51)).
'comment'('lineComment'('-- end generating datatypes'),'src_position'(29,1,1111,27)).
'comment'('lineComment'('--following sets are generated: BUFFER, ROUTE, SIGNALHOME'),'src_position'(31,1,1140,57)).
'comment'('lineComment'('-- end generating sets'),'src_position'(36,1,1274,22)).
'comment'('lineComment'('-- the rest of this file is the same for all track plans'),'src_position'(41,1,1331,56)).
'comment'('lineComment'('-- define channels with names that correspond to the B operations in the Interlocking.mch'),'src_position'(42,1,1388,89)).
'comment'('lineComment'('--definition of error channels'),'src_position'(51,1,1778,30)).
'comment'('lineComment'('--controller process to deal with route requests and releasing of routes'),'src_position'(55,1,1845,72)).
'comment'('lineComment'('--definition of individual train control process'),'src_position'(63,1,2083,48)).
'comment'('lineComment'('--process to determine movement of train, trains do not move through red signals'),'src_position'(66,1,2192,80)).
'comment'('lineComment'('-- aspect==red'),'src_position'(78,12,2660,14)).
'comment'('lineComment'('--definition of all train processes which are not initially on the tracks'),'src_position'(84,1,2772,73)).
'comment'('lineComment'('--definitons to model collision and derailment and runthrough'),'src_position'(87,1,2889,61)).
'comment'('lineComment'('--these processes serve no purpose in the CSP but are included so that the alphabets of the CSP and B match'),'src_position'(88,1,2951,107)).
'comment'('lineComment'('--they are events that are used in the CTL model checking'),'src_position'(89,1,3059,57)).
'comment'('lineComment'('--define the composition of the route controller, all trains and the error events'),'src_position'(93,1,3206,81)).
'comment'('lineComment'('--control the entry of the two trains in the model to limit the state space'),'src_position'(94,1,3288,75)).
'comment'('lineComment'('-- Main process which enables the B and CSP to be analysed together'),'src_position'(97,1,3407,67)).
'comment'('lineComment'('-- is needed in order to run through ProB'),'src_position'(98,1,3475,41)).
'symbol'('seq','seq','no_loc_info_available','BuiltIn primitive').
'symbol'('TRAIN','TRAIN','src_span'(22,10,22,15,870,5),'Datatype').
'symbol'('Hugo','Hugo','src_span'(22,18,22,22,878,4),'Constructor of Datatype').
'symbol'('Erna','Erna','src_span'(22,25,22,29,885,4),'Constructor of Datatype').
'symbol'('ASPECT','ASPECT','src_span'(23,10,23,16,899,6),'Datatype').
'symbol'('red','red','src_span'(23,19,23,22,908,3),'Constructor of Datatype').
'symbol'('green','green','src_span'(23,25,23,30,914,5),'Constructor of Datatype').
'symbol'('nosignal','nosignal','src_span'(23,33,23,41,922,8),'Constructor of Datatype').
'symbol'('ANSWER','ANSWER','src_span'(24,10,24,16,940,6),'Datatype').
'symbol'('yes','yes','src_span'(24,19,24,22,949,3),'Constructor of Datatype').
'symbol'('no','no','src_span'(24,25,24,27,955,2),'Constructor of Datatype').
'symbol'('POS','POS','src_span'(27,10,27,13,1020,3),'Datatype').
'symbol'('AE','AE','src_span'(27,16,27,18,1026,2),'Constructor of Datatype').
'symbol'('AD','AD','src_span'(27,21,27,23,1031,2),'Constructor of Datatype').
'symbol'('AC','AC','src_span'(27,26,27,28,1036,2),'Constructor of Datatype').
'symbol'('AB','AB','src_span'(27,31,27,33,1041,2),'Constructor of Datatype').
'symbol'('AA','AA','src_span'(27,36,27,38,1046,2),'Constructor of Datatype').
'symbol'('offUnit','offUnit','src_span'(27,41,27,48,1051,7),'Constructor of Datatype').
'symbol'('nullUnit','nullUnit','src_span'(27,51,27,59,1061,8),'Constructor of Datatype').
'symbol'('ALLROUTE','ALLROUTE','src_span'(28,10,28,18,1079,8),'Datatype').
'symbol'('R1','R1','src_span'(28,21,28,23,1090,2),'Constructor of Datatype').
'symbol'('R2','R2','src_span'(28,26,28,28,1095,2),'Constructor of Datatype').
'symbol'('dummyRoute','dummyRoute','src_span'(28,31,28,41,1100,10),'Constructor of Datatype').
'symbol'('BUFFER','BUFFER','src_span'(32,1,32,7,1198,6),'Ident (Groundrep.)').
'symbol'('SIGNALHOME','SIGNALHOME','src_span'(33,1,33,11,1212,10),'Ident (Groundrep.)').
'symbol'('ROUTE','ROUTE','src_span'(34,1,34,6,1236,5),'Ident (Groundrep.)').
'symbol'('HIDDENROUTE','HIDDENROUTE','src_span'(35,1,35,12,1255,11),'Ident (Groundrep.)').
'symbol'('ALLTRACK','ALLTRACK','src_span'(38,1,38,9,1298,8),'Ident (Groundrep.)').
'symbol'('TRACK','TRACK','src_span'(39,1,39,6,1313,5),'Ident (Groundrep.)').
'symbol'('enter','enter','src_span'(43,9,43,14,1486,5),'Channel').
'symbol'('exit','exit','src_span'(44,9,44,13,1523,4),'Channel').
'symbol'('nextSignal','nextSignal','src_span'(45,9,45,19,1559,10),'Channel').
'symbol'('move','move','src_span'(46,9,46,13,1602,4),'Channel').
'symbol'('request','request','src_span'(47,9,47,16,1641,7),'Channel').
'symbol'('release','release','src_span'(48,9,48,16,1672,7),'Channel').
'symbol'('hiddenRequest','hiddenRequest','src_span'(49,9,49,22,1703,13),'Channel').
'symbol'('changeDirection','changeDirection','src_span'(50,9,50,24,1746,15),'Channel').
'symbol'('collide','collide','src_span'(52,9,52,16,1817,7),'Channel').
'symbol'('derail','derail','src_span'(52,17,52,23,1825,6),'Channel').
'symbol'('runThrough','runThrough','src_span'(52,24,52,34,1832,10),'Channel').
'symbol'('RW_CTRL','RW_CTRL','src_span'(56,1,56,8,1918,7),'Ident (Groundrep.)').
'symbol'('r','r','src_span'(57,7,57,8,1934,1),'Ident (Prolog Variable)').
'symbol'('ans','ans','src_span'(57,29,57,32,1956,3),'Ident (Prolog Variable)').
'symbol'('r2','r','src_span'(59,7,59,8,1983,1),'Ident (Prolog Variable)').
'symbol'('ans2','ans','src_span'(59,29,59,32,2005,3),'Ident (Prolog Variable)').
'symbol'('r3','r','src_span'(61,7,61,8,2032,1),'Ident (Prolog Variable)').
'symbol'('ans3','ans','src_span'(61,41,61,44,2066,3),'Ident (Prolog Variable)').
'symbol'('TRAIN_OFF','TRAIN_OFF','src_span'(64,1,64,10,2132,9),'Funktion or Process').
'symbol'('t','t','src_span'(64,11,64,12,2142,1),'Ident (Prolog Variable)').
'symbol'('np','np','src_span'(64,31,64,33,2162,2),'Ident (Prolog Variable)').
'symbol'('TRAIN_CTRL','TRAIN_CTRL','src_span'(67,1,67,11,2273,10),'Funktion or Process').
'symbol'('t2','t','src_span'(67,12,67,13,2284,1),'Ident (Prolog Variable)').
'symbol'('pos','pos','src_span'(67,14,67,17,2286,3),'Ident (Prolog Variable)').
'symbol'('u_turned','u_turned','src_span'(67,18,67,26,2290,8),'Ident (Prolog Variable)').
'symbol'('aspect','aspect','src_span'(75,22,75,28,2537,6),'Ident (Prolog Variable)').
'symbol'('newp','newp','src_span'(77,21,77,25,2615,4),'Ident (Prolog Variable)').
'symbol'('newp2','newp','src_span'(81,17,81,21,2735,4),'Ident (Prolog Variable)').
'symbol'('ALL_TRAINS','ALL_TRAINS','src_span'(85,1,85,11,2846,10),'Ident (Groundrep.)').
'symbol'('t3','t','src_span'(85,18,85,19,2863,1),'Ident (Prolog Variable)').
'symbol'('ErrorEvent','ErrorEvent','src_span'(90,1,90,11,3117,10),'Ident (Groundrep.)').
'symbol'('ERROR','ERROR','src_span'(91,1,91,6,3158,5),'Ident (Groundrep.)').
'symbol'('error','error','src_span'(91,12,91,17,3169,5),'Ident (Prolog Variable)').
'symbol'('CTRL_WITH_TRAINS','CTRL_WITH_TRAINS','src_span'(95,1,95,17,3364,16),'Ident (Groundrep.)').
'symbol'('MAIN','MAIN','src_span'(99,1,99,5,3517,4),'Ident (Groundrep.)').