MACHINE ControlTable

/* Date: Fri Sep 09 09:55:18 BST 2016
 * Notes: supporting platform:/resource/Trackplans/default.ontrack model
 * Automatically generated by OnTrack tool version 0.2
 * Authors of Tool: Hoang Nga Nguyen and Philip James
 * Authors: Moller, Nguyen, Roggenbach, Schneider, Treharne
 * Corresponding Authors: Hoang Nga Nguyen
 *
 */

[%
var bMachine1 = BMachine!Machine.all().first();
%]

SEES Context, Topology

CONSTANTS
  entryTable,
  normalTable,
  reverseTable,
  clearTable,
  directedTable,
  lockTable


PROPERTIES
  entryTable: ENTRY <-> UNIT &
  normalTable :  ROUTE \/ HIDDENROUTE <-> POINT &
  reverseTable : ROUTE \/ HIDDENROUTE <-> POINT &
  clearTable :   ROUTE <-> UNIT &
  directedTable : ROUTE <-> directedUnits &
  lockTable :    ROUTE <-> POINT &

    [%
    for (p in bMachine1.hasProperties)
    {
    	out.println( p.write() );
      out.println( " & ");
    }
    %]

  lockTable = ROUTE <| (normalTable \/ reverseTable)

END

[%

operation BMachine!BSet write() : String {

	var toReturn = "    " + self.name + " = {";

	for (el in self.hasSetElements)
	{
		toReturn = toReturn + el.name;

		if (hasMore) {toReturn = toReturn + ", ";}
	}

	toReturn = toReturn + "};";
	return toReturn;
}

operation BMachine!BSet writeElements() : String {

	var toReturn = "{";

	for (el in self.hasSetElements) {

		toReturn = toReturn + el.name;

		if (hasMore) {toReturn = toReturn + ",";}
	}

	toReturn = toReturn + "}";
	return toReturn;

}

operation BMachine!Property write() : String {

	var toReturn = "    " + self.name + " = {";
	var closePr = "";

	for (pe in self.hasPropElements) {

		// print domain elements
		closePr = "";
		for (de in pe.hasDomainElements) {
			toReturn = toReturn + "(" + de.name;
			if (hasMore) toReturn = toReturn + ",";
			closePr = closePr + ")";
		}
		toReturn = toReturn + closePr;

		// if range set is present
		if (pe.hasRangeSet.isDefined()) {

			// print |->
			toReturn = toReturn + " |-> ";

			// print set
			toReturn = toReturn + pe.hasRangeSet.writeElements();
		}

		// print range elements
		closePr = "";
		for (re in pe.hasRangeElements) {

			// print |->
			if (loopCount = 1) {toReturn = toReturn + " |-> ";}

			toReturn = toReturn + "(" + re.name;
			if (hasMore) {toReturn = toReturn + ",";}
			closePr = closePr + ")";
		}
		toReturn = toReturn + closePr;

		if (hasMore) {toReturn = toReturn + ", ";}
	}

	toReturn = toReturn + "}";
	return toReturn;
}

%]
